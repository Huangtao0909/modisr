% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/batch_gdal_mask.R
\name{batch_gdal_mask}
\alias{batch_gdal_mask}
\title{Mask batch of satellite images using gdalwrap.}
\usage{
batch_gdal_mask(infiles, outdir, outsuffix = ".tif", pattern = ".tif$",
  .parallel = T, nCores = 4, recursive = FALSE, verbose = FALSE, ...)
}
\arguments{
\item{infiles}{Character. A directory or a character vector of files (including their path).
If a directory, all files matching the pattern will be converted.}

\item{outdir}{Character. Output directory to save the output files.}

\item{outsuffix}{Character. The suffix to append to the input filename (minus its extension)
to generate the output filename(s).}

\item{pattern}{Character. If infiles is a directory, this is used to limit the file it is searching for.}

\item{.parallel}{Logical. Should mask be executed in parallel mode?}

\item{nCores}{Numeric. The number of clusters to use when \code{.parallel = T}.}

\item{recursive}{Logical. If infiles is a directory, should files be searched for recursively?}

\item{verbose}{Logical. Enable verbose execution? Default is FALSE.}

\item{...}{Parameters to pass to \code{\link[gdalUtils]{gdalwarp}}.}
}
\value{
Either a list of NULLs or
a list of RasterBricks depending on whether output_Raster is set to TRUE.
}
\description{
Mask batch of satellite images using gdalwrap.
}
\details{
This function is designed to run gdalwrap in batch mode.
Files are passed to the function either directly as a character vector of filenames,
or by passing it a directory and (typically) a search pattern (e.g. pattern=".tif").

If a parallel engine is started and registered with foreach,
this program will run in parallel (one gdalwrap per worker).
\code{gdalwrap} will execute based on parameters passed to it,
and the output file will be named based on the input file (stripped of its extension),
with the outsuffix appended to it.
}
\seealso{
\code{\link[gdalUtils]{gdalwarp}}
}
